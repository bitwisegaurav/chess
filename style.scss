// chess game
$square-color: #789a54;
$light-square-color: #eaedcc;
$text-color: #a9a094;
$bg-color: #302e2b;
$width-position-box: 2rem;
$font-family: 'Roboto', sans-serif;

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    transition: all .5s ease-in-out;
}

body{
    height: 100vh;
    display: grid;
    place-items: center;
    background-color: $bg-color;
    font-family: $font-family;
}

@mixin transform(){
    transform: rotate(180deg);
}

.container {
  width: 80vw;
  height: 95vh;
  color: $text-color;
  background-color: $bg-color;
//   border: 2px solid darkblue;
  display: flex;
    flex-direction: column;
  justify-content: space-evenly;
    align-items: center;
  
  .board{
      max-width: calc(100% - 4rem);
      max-height: calc(100% - 10rem);
      aspect-ratio: 1/1;
      display: grid;
      grid-template-rows: repeat(9, 1fr);
      margin: 0 2rem 2rem;
      position: relative;
    //   border: 2px solid red;

      .rowsSection{
        position: relative;
        display: grid;
        grid-template-columns: 1fr;
        
        .row{
            display: flex;
            // position: relative;

            .square{
                flex: 1;
                aspect-ratio: 1/1;
                // border: 1px solid black;
                display: grid;
                place-items: center;
                cursor: pointer;

                img{
                    width: 100%;
                    height: 100%;
                    object-fit: contain;
                }
            }
            .positionCol{
                height: $width-position-box;

            }
        }

        &:nth-child(odd) {
            .row{
                .square{
                    &:nth-child(odd) {
                        background-color: $square-color;
                    }
                    &:nth-child(even){
                        background-color: $light-square-color;
                    }
                }
            }
        }

        &:nth-child(even) {
            .row{
                .square{
                    &:nth-child(even) {
                        background-color: $square-color;
                    }
                    &:nth-child(odd){
                        background-color: $light-square-color;
                    }
                }
            }
        }

        .positionRow, .positionCol{
            display: grid;
            place-items: center;
            background-color: transparent !important;
            // border: none !important;
        }
        
        .positionRow{
            position: absolute;
            top: 0;
            left: -$width-position-box;
            width: $width-position-box;
            height: 100%;
        }
      }

      .positionBox{
        .row{   
            border: none !important;
        }
      }
    }

    .options{
        $btn-width: 5rem;
        $btn-height: 3rem;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;

        .buttons{
            display: flex;
            justify-content: space-evenly;
            flex-wrap: wrap;
            width: 80%;
            max-width: 42rem;
            gap: 1rem;
            align-items: center;
            // border: 2px solid green;

            button{
                flex: 1;
                aspect-ratio: 3/1;
                // max-width: $btn-width;
                max-height: $btn-height;
                border-radius: 5px;
                border: none;
                background-color: $text-color;
                color: $bg-color;
                cursor: pointer;
                transition: all 0.3s ease-in-out;

                &:hover{
                    background-color: $square-color;
                    color: $light-square-color;
                }
            }
        }
    }

    .secondturn{
        @include transform;

        .rowsSection{
            .row{
                .square img{
                    @include transform;
                }
                .positionCol{
                    @include transform;
                }
            }
            &:last-child{
                order: -2;
            }
            .positionRow{
                left: auto;
                right: -($width-position-box);
                @include transform;
            }
        }
    }

}